version: "3"

services: 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    x-tinkr:
      cpu: 1024
      memory: 3096
      load_balancer:
        tenancy: dedicated
        type: webserver
    ports:
      - 9200:9200
    environment: 
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks: 
      - logging-network

  logstash:
    build:
      context: .
      dockerfile: Dockerfile.logstash
    depends_on: 
      - elasticsearch
    x-tinkr:
      memory: 1024
      environment: 
        -  ELASTIC_SEARCH_HOST=<hostname:elasticsearch> 
    ports:
      - 12201:12201/udp
    networks:
      - logging-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    depends_on:
      - logstash
    ports: 
      - 5601:5601
    x-tinkr:
      memory: 1024
      environment:
        - ELASTIC_SEARCH_HOST=<hostname:elasticsearch>
      load_balancer:
        tenancy: dedicated
        type: webserver
        healthcheck:
          success_code: "200"
    networks: 
      - logging-network

  httpd:
    image: httpd:latest
    depends_on:
      - logstash
    ports:
      - 80:80 
    x-tinkr:
      cpu: 512
      memory: 512
    logging:
      driver: gelf
      options:
        # Use udp://host.docker.internal:12201 when you are using Docker Desktop for Mac
        # docs: https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
        # issue: https://github.com/lvthillo/docker-elk/issues/1
        gelf-address: "udp://localhost:12201"

networks: 
  logging-network:
    driver: bridge
